---
# Install Apache Guacamole by building locally.
# https://www.kali.org/docs/general-use/guacamole-kali-in-browser/

- name: Assert `guacamole_password` is set.
  ansible.builtin.assert:
    that:
      - '{{ guacamole_password is defined and guacamole_password != "" }}'
    fail_msg: "'guacamole_password' must be defined in including playbook"

- name: Assert `mysql_password` is set.
  ansible.builtin.assert:
    that:
      - '{{ mysql_password is defined and mysql_password != "" }}'
    fail_msg: "'mysql_password' must be defined in including playbook"

- name: Set fact `tmpdir`.
  ansible.builtin.set_fact:
    tmpdir: '/root/tmp'
  when: tmpdir is not defined

- name: Set fact with Guacamole related service names.
  ansible.builtin.set_fact:
    guacamole_services:
      - "guacd"
      - "mariadb"
      - "tomcat9"
      # - "vncserver"
  when: guacamole_services is not defined

- name: Ensure Git is installed.
  ansible.builtin.apt:
    name: git
    state: present
  become: true

- name: "Ensure directory exists: {{ tmpdir }}"
  ansible.builtin.file:
    dest: '{{ tmpdir }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0o770
  become: true

- name: Clone Guacamole repo.  # noqa: latest[git]
  ansible.builtin.git:
    clone: true
    repo: https://github.com/MysticRyuujin/guac-install.git
    dest: '{{ tmpdir }}/guac-install'
  changed_when: false
  become: true

- name: Block for installing Guacamole.
  block:
    - name: Install Guacamole from source.
      ansible.builtin.shell: >-
        /bin/bash guac-install.sh
          --nomfa
          --installmysql
          --mysqlpwd {{ mysql_password }}
          --guacpwd {{ guacamole_password }} || echo guacamole_*_build.log
      args:
        executable: /bin/bash
        chdir: '{{ tmpdir }}/guac-install'
        creates: '/usr/local/sbin/guacd'
      environment:
        - DEBIAN_FRONTEND: 'noninteractive'
      register: guacamole_install
      become: true

  rescue:
    - name: Set fact with log file name.
      ansible.builtin.set_fact:
        guacamole_build_log: '{{ guacamole_install.stdout_lines[-1] }}'

    - name: Expose Guacamole build log file contents.
      ansible.builtin.shell: cat {{ guacamole_build_log }}
      args:
        executable: /bin/bash
      changed_when: false
      become: true

  always:
    - name: Clean up Guacamole install files.
      ansible.builtin.file:
        path: guac-install
        state: absent
      become: true

- name: Ensure TigerVNC is installed.
  ansible.builtin.apt:
    name: "tigervnc-standalone-server"
    state: present
  become: true

- name: Ensure user home directories are mapped.
  ansible.builtin.include_tasks: '{{ collection_root }}/tasks/get_homedir.yml'
  loop: "{{ accounts }}"
  loop_control:
    loop_var: user

- name: Ensure TigerVNC is enabled for users.
  ansible.builtin.include_tasks: 'setup-vnc.yml'
  loop: "{{ accounts }}"
  loop_control:
    loop_var: user

- name: Ensure timezone set properly.
  community.general.timezone:
    name: 'America/Los_Angeles'
  become: true

# FIXME: vncserver :1
- name: Ensure Guacamole-related services are enabled, started.
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
    state: started
  become: true
  changed_when: false
  failed_when: false
  loop: "{{ guacamole_services }}"

# vim: set ts=4 sw=4 tw=0 et :
