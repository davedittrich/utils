---

# Builds a Docker image customized for molecule testing of
# the `davedittrich.utils` Ansible Collection.

- name: Set fact with `docker_user`.
  ansible.builtin.set_fact:
    docker_user: '{{ docker_user | default("ansible_effective_user_id") }}'

- name: Set fact with `docker_group`.
  ansible.builtin.set_fact:
    docker_group: '{{ docker_group | default("ansible_effective_group_id") }}'

- name: Assert `packages` and `repo_name`` are defined.
  ansible.builtin.assert:
    that:
      - '{{ repo_name is defined and repo_name != "" }}'
    fail_msg: "'repo_name' must be defined in including playbook"

- name: Assert `ubuntu` or `debian` in target_distro.
  ansible.builtin.assert:
    that:
      - '{{ "debian" in target_distro or "ubuntu" in target_distro }}'
    fail_msg: "only 'debian' and 'ubuntu' geerlinguy images supported right now"

# Include all packages that might be added in roles, based on the
# operating system distribution used.

- name: Set fact with packages to include (Ubuntu).
  ansible.builtin.set_fact:
    packages_include:
      - arandr
      - fbi
      - hwinfo
      - imagemagick
      - lxde4
      - rsync
      - ssh
      - tree
  when: "'ubuntu' in target_distro"

- name: Set fact with packages to include (Ubuntu).
  ansible.builtin.set_fact:
    packages_remove:
      - libreoffice
  when: "'ubuntu' in target_distro"

- name: Set fact with packages to include (Debian).
  ansible.builtin.set_fact:
    packages_include:
      - arandr
      - fbi
      - hwinfo
      - imagemagick
      - rsync
      - ssh
      - task-lxde-desktop
      - tree
  when: "'debian' in target_distro"

- name: Set fact with packages to remove (Debian).
  ansible.builtin.set_fact:
    packages_remove:
      - libreoffice
  when: "'debian' in target_distro"

- name: Set fact with source image name.
  ansible.builtin.set_fact:
    source_image: "geerlingguy/docker-{{ target_distro }}-ansible:latest"

- name: Set fact with converted image name.
  ansible.builtin.set_fact:
    my_image: '{{ source_image | replace("geerlingguy", repo_name) }}'

- name: Template out Dockerfile.
  ansible.builtin.copy:
    content: |
      FROM {{ source_image }}
      ENV DEBIAN_FRONTEND noninteractive && \
      RUN echo "deb http://deb.debian.org/debian testing non-free contrib main" | tee -a /etc/apt/sources.list.d/deb-docker.list \
        apt-get update && \
        {% if 'debian' in target_distro %}
        apt-get install -y libcrypt-dev && \
        {% else %}
        apt-get install -y libcrypt1 && \
        {% endif %}
        apt-get -y \
          -o APT::Install-Recommends=false \
          -o APT::Get::AutomaticRemove=true \
          -o APT::Acquire::Retries=3 \
          install {{ packages_include | join(' ') }} && \
        {% if packages_remove | count > 0 -%}
        apt purge -y {{ packages_remove | join(' ') }} && \
        {% endif -%}
        apt autoremove -y && \
        apt clean && \
        rm -rf /var/cache/apt
    dest: ../docker/Dockerfile
    owner: '{{ docker_user }}'
    group: '{{ docker_group }}'
    mode: 0o600
  delegate_to: localhost

- name: Remove target image `{{ my_image }}`.
  community.docker.docker_image:
    state: absent
    name: '{{ my_image }}'
  delegate_to: localhost

- name: Build molecule testing image `{{ my_image }}`.
  community.docker.docker_image:
    build:
      path: ../docker
    name: '{{ my_image }}'
    source: build
    force_source: true
    push: false
  register: docker_build
  delegate_to: localhost

- name: Debug `docker_build`.
  ansible.builtin.debug:
    var: docker_build

- name: Set fact with log file path.
  ansible.builtin.set_fact:
    log_file: 'build-{{ my_image | replace(repo_name, "") | replace("/", "") | replace(":latest", "") }}.log'

- name: Preserve Docker build log for debugging.
  ansible.builtin.copy:
    content: '{{ docker_build.stdout ~ "\n\n" ~ docker_build.stderr | default("") }}'
    dest: '../docker/{{ log_file }}'
    owner: '{{ docker_user }}'
    group: '{{ docker_group }}'
    mode: 0o600
  delegate_to: localhost
  when: ansible_verbosity > 1

- name: Remove source image `{{ source_image }}`.
  community.docker.docker_image:
    state: absent
    name: '{{ source_image }}'
  delegate_to: localhost
  when: keep_source_image is false

- name: Ensure Dockerfile is removed.
  ansible.builtin.file:
    path: '../docker/Dockerfile'
    state: absent
