---
# Playbook to install zaproxy from a locally-downloaded DEB file.
#
# By design, Ansible does not use the current working directory
# and so installing the package from the current working directory
# when running the playbook from another directory requires
# you get around this by adding '-e cwd=$(pwd)' on the command line.
#

- hosts: '{{ host | default("all") }}'
  gather_facts: false

  vars:
    zaproxy_version: '2.11.1-0kali1'
    zaproxy_sha256sum: '7da3e4a0307af87fbfeb92bc92b9dda3ee9b9c1c4309660b63d48618b012f35e'

  tasks:
    - name: Set fact with package source directory.
      ansible.builtin.set_fact:
        zaproxy_deb_dir: '{{ zaproxy_deb_dir | default(cwd) }}/'

    - name: Set fact with zaproxy DEB file name.
      ansible.builtin.set_fact:
        zaproxy_deb: 'zaproxy_{{ zaproxy_version }}_all.deb'

#   - name: Verify zaproxy DEB checksum.
#     ansible.builtin.stat:
#       path: '{{ zaproxy_deb_dir }}{{ zaproxy_deb }}'
#       get_checksum: true
#       checksum_algorithm: sha256
#       register: stat_result
#       failed_when: stat_result.checksum == '{{ zaproxy_sha256sum }}'

    - name: Copy zaproxy DEB to host.
      ansible.builtin.copy:
        src: '{{ zaproxy_deb_dir }}{{ zaproxy_deb }}'
        dest: '/tmp/{{ zaproxy_deb }}'
        owner: root
        group: root
      delegate_to: localhost

    - name: Ensure zaproxy DEB is installed.
      ansible.builtin.shell: >
        dpkg --install /tmp/{{ zaproxy_deb }}
      become: true

    - name: Ensure zaproxy DEB is removed.
      ansible.builtin.file:
        path: '/tmp/{{ zaproxy_deb }}'
        state: absent
      become: true

# vim: ft=ansible :
