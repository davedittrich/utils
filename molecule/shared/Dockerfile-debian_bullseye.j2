FROM debian:bullseye
LABEL maintainer="Dave Dittrich"

ENV container docker
ENV LC_ALL C
ENV DEBIAN_FRONTEND noninteractive
# Work around error on apt-get installs.
ENV PIP_BREAK_SYSTEM_PACKAGES 1

# Ensure that scripts don't fail when run from '/tmp' directory, e.g.:
#   ...
#   Preconfiguring packages ...
#   Can't exec "/tmp/iproute2.config.Dq1Grg": Permission denied at /usr/lib/x86_64-linux-gnu/perl-base/IPC/Open3.pm line 178.
#   open2: exec of /tmp/iproute2.config.Dq1Grg configure 5.10.0-4 failed: Permission denied at /usr/share/perl5/Debconf/ConfModule.pm line 59.
#   ...
# Make sure this matches environment variable ANSIBLE_REMOTE_TMP in molecule/*/molecule.yml file.
RUN mkdir /root/tmp
ENV TMPDIR /root/tmp

# After a few weeks away from the keyboard in October, a `make test` run
# failed on a `dist-upgrade` step that was passing cleanly on all test systems.
# It had the following error message:
#   . . .
#   Unpacking usrmerge (33) ...
#   Setting up usrmerge (33) ...
#   Warning: overlayfs detected, /usr/lib/usrmerge/convert-usrmerge will not
#   be run automatically. See #1008202 for details.
#
#   If this is a container then it can be converted by unpacking the image,
#   entering it with chroot(8), installling usrmerge and then repacking the
#   image again. at /usr/lib/usrmerge/convert-usrmerge line 399.
#   E: usrmerge failed.
#   dpkg: error processing package usrmerge (--configure):
#   installed usrmerge package post-installation script subprocess returned error exit status 1
#   E rrors were encountered while processing:
#   usrmerge
#
# OK. That's not very helpful. What exactly is `usrmerge`, and where am I
# supposed to find `#1008202` to see it? And how exactly is one supposed to
# convert a container built by `molecule` before it runs Ansible playbooks?
# (And no, deleting the container and rebuilding it DID NOT fix the problem.)
#
# After a bit of searching, it turns out that a debate about making a major change
# to "correct" a design decision made decades ago for reasons that no longer apply
# had finally resulted in action being taken to push out a package on September 17,
# 2022 (while I was away working on my house) that horribly breaks Docker containers.
# Despite the "trivial" fix described above, it looks like the official Debian
# Docker images don't even have the fix!
#
# https://wiki.debian.org/UsrMerge
# https://lists.debian.org/debian-devel-announce/2022/09/msg00001.html
#
# For now, get back to something that works again by using this workaround that
# we *all* knew about because we read *every* README file accompanying Debian
# distributions to the end. Not.
#
# https://salsa.debian.org/md/usrmerge/raw/master/debian/README.Debian

RUN echo "this system will not be supported in the future" > /etc/unsupported-skip-usrmerge-conversion

RUN apt-get update \
    && apt-get -y install \
      python3 \
      python3-apt \
      python3-pip \
      python3-setuptools \
      python3-wheel \
      python3-venv \
    && apt-get -y \
         -o APT::Install-Recommends=false \
         -o APT::Get::AutomaticRemove=true \
         -o APT::Acquire::Retries=3 \
         install \
      aptitude \
      arandr \
      bash \
      build-essential \
      ca-certificates \
      debconf \
      fbi \
      hwinfo \
      imagemagick \
      kmod \
      initramfs-tools \
      iproute2 \
      libffi-dev \
      libssl-dev \
      procps \
      rsync \
      sudo \
      systemd \
      systemd-sysv \
      task-lxde-desktop \
      wget \
      vim \
      tree \
    && python -m pip install --upgrade pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN rm -f /lib/systemd/system/multi-user.target.wants/* \
    /etc/systemd/system/*.wants/* \
    /lib/systemd/system/local-fs.target.wants/* \
    /lib/systemd/system/sockets.target.wants/*udev* \
    /lib/systemd/system/sockets.target.wants/*initctl* \
    /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup* \
    /lib/systemd/system/systemd-update-utmp*

EXPOSE 80/tcp
EXPOSE 443/tcp
EXPOSE 4822/tcp

RUN systemctl enable systemd-networkd
RUN systemctl set-default multi-user.target

#VOLUME [ "/sys/fs/cgroup" ]

CMD [ "/lib/systemd/systemd", "log-level=info", "unit=sysinit.target" ]
