---
# This playbook assumes that the `galaxy.yml` file has already been
# prepared in the current working directory of the process running
# this playbook, containing the current version number for the
# artifact to build or publish that matches the contents of the
# file `VERSION`.

- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    _no_log: "{{ _no_log | default(true) }}"
    cwd: "{{ lookup('env', 'PWD') }}"

  pre_tasks:
    - name: Set fact with version number.
      ansible.builtin.set_fact:
        version: '{{ lookup("file", "{{ cwd }}" + "/VERSION") }}'

    - name: Set fact with artifact name.
      ansible.builtin.set_fact:
        artifact_name: 'davedittrich-utils-{{ version }}.tar.gz'

    - name: Set fact `publish`.
      ansible.builtin.set_fact:
        publish: false
      when: publish is not defined

    - name: Debug build settings.
      ansible.builtin.debug:
        msg: '{{ item }}'
      loop:
        - "artifact_name={{ artifact_name }}"
        - "publish={{ publish | bool }}"
        - "version={{ version }}"

    - name: Ensure API access credentials for publication.
      when: publish | bool
      block:

        - name: Set fact `ansible_galaxy_server` from environment.
          ansible.builtin.set_fact:
            ansible_galaxy_server: "{{ lookup('env', 'ANSIBLE_GALAXY_SERVER')  }}"

        - name: Set fact `ansible_galaxy_api_key` from environment.
          ansible.builtin.set_fact:
            ansible_galaxy_api_key: "{{ lookup('env', 'ANSIBLE_GALAXY_API_KEY')  }}"
          no_log: '{{ _no_log }}'

        - name: Assert ANSIBLE_GALAXY_SERVER is not null.
          ansible.builtin.assert:
            that:
              - ansible_galaxy_server | length > 0

        - name: Assert ANSIBLE_GALAXY_API_KEY is not null.
          ansible.builtin.assert:
            that:
              - ansible_galaxy_api_key | length > 0

      rescue:
        - name: Explain failure.
          ansible.builtin.fail:
            msg:
              - "Both ANSIBLE_GALAXY_SERVER and ANSIBLE_GALAXY_API_KEY must"
              - "be set in the process environment to publish artifacts."

  tasks:
    - name: Block to build collection.
      block:

        - name: Build the collection.
          ansible.builtin.shell: >
            ansible-galaxy collection build --force &&
            ln -sf {{ artifact_name }} davedittrich-utils-latest.tar.gz
          args:
            chdir: '{{ cwd }}'
          register: collection_build

      rescue:
        - name: Debug collection_build.stderr_lines.
          ansible.builtin.debug:
            msg: "{{ collection_build.stderr_lines }}"
          when:
            - collection_build is defined
            - collection_build is failed

        - name: Get directory contents.
          ansible.builtin.shell: >
            tree -alFhup -L 2
          args:
            chdir: '{{ cwd }}'
          register: tree

        - name: Debug tree output.
          ansible.builtin.debug:
            msg: "{{ tree.stdout_lines }}"

    - name: Block to publish collection.
      when: publish | bool
      block:

        - name: Publish the collection.
          ansible.builtin.shell: >
            ansible-galaxy collection publish -vvv \
              --server '{{ ansible_galaxy_server }}' \
              --api-key '{{ ansible_galaxy_api_key }}' \
              '{{ artifact_name }}'
          args:
            chdir: '{{ cwd }}'
          no_log: '{{ _no_log }}'
          register: collection_publish
          when: publish | bool

      rescue:
        - name: Debug collection_publish.stderr_lines.
          ansible.builtin.debug:
            msg: "{{ collection_publish.stderr_lines }}"
          when:
            - collection_publish is defined
            - collection_publish is failed

        - ansible.builtin.fail:
            msg:
              - "[-] publish of {{ artifact_name }} failed"

# vim: ft=ansible:
