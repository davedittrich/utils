---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    # This should be set via the command line at runtime.
    tag: "{{ github_tag.split('/')[-1].lstrip('v') }}"
    nolog: '{{ nolog|default(true) }}'
    galaxy_yml_only: '{{ galaxy_yml_only|default(false) }}'

  pre_tasks:
    - ansible.builtin.set_fact:
        verbose_flag: '-{{ "v" * ansible_verbosity|default(1) }}'

    - ansible.builtin.set_fact:
        version: '{{ version|default(lookup("file", "../VERSION")) }}'

    - ansible.builtin.set_fact:
        save_galaxy_yml: '{{ save_galaxy_yml|default(true) }}'

    - ansible.builtin.set_fact:
        publish: '{{ publish|default(false) }}'

    - assert:
        that:
          - lookup('env', 'ANSIBLE_GALAXY_SERVER') != ''
          - lookup('env', 'ANSIBLE_GALAXY_API_KEY') != ''
      when: publish and not galaxy_yml_only

    - name: Find files to exclude from build artifact on localhost.
      ansible.builtin.shell: |
        git status --porcelain | grep '^?? ' | awk '{ print $2; }'
      register: git_status

    - name: Set fact with list of files for `build_ignore`.
      ansible.builtin.set_fact:
        build_ignore_files: '{{ build_ignore_files|default([]) + [item] }}'
      loop: '{{ git_status.stdout_lines }}'

    - name: Ensure the ~/.ansible directory exists.
      ansible.builtin.file:
        path: ~/.ansible
        state: directory
        mode: 0o700
      when: not galaxy_yml_only

  tasks:
    - name: Set fact with artifact name.
      ansible.builtin.set_fact:
        artifact_name: 'davedittrich-utils-{{ version }}.tar.gz'
      when: not galaxy_yml_only

    - name: Debug artifact name.
      ansible.builtin.debug:
        msg: '{{ artifact_name }}'
      when: not galaxy_yml_only

    - name: Stat the galaxy.yml file.
      ansible.builtin.stat:
        path: ../galaxy.yml
      register: galaxy_yml

    - name: Template out the galaxy.yml file.
      ansible.builtin.template:
        src: templates/galaxy.yml.j2
        dest: ../galaxy.yml
      register: new_galaxy_yml

    - name: Block to build/publish collection.
      when: publish and not galaxy_yml_only
      block:

        - name: Build the collection. # noqa 503
          ansible.builtin.command: >
            ansible-galaxy {{ verbose_flag }} collection build
            chdir=../
          when: new_galaxy_yml.changed

        - name: Publish the collection. # noqa 503
          ansible.builtin.command: >
            ansible-galaxy collection publish
              "./{{ artifact_name }}"
              --server {{ lookup('env', 'ANSIBLE_GALAXY_SERVER')  }}
              --api-key ${{ lookup('env', 'ANSIBLE_GALAXY_API_KEY') }}
            chdir=../
          no_log: '{{ nolog }}'
          when: publish

        - name: Ensure the `galaxy.yml` file is absent.
          ansible.builtin.file:
            path: ../galaxy.yml
            state: absent
          when: not save_galaxy_yml

      rescue:
        - fail:
            msg: >
              '{{ artifact_name }} not built: ' +
              "file 'build/galaxy.yml' kept for reference"

# EOF
