---

# tasks for davedittrich.utils.ip_in_issue

- name: Debug `ansible_interfaces`.
  ansible.builtin.debug:
    msg: '{{ ansible_interfaces }}'
    verbosity: 1
  when: ansible_interfaces is defined

- name: Set fact ` ip_in_issue__issue_interfaces`.
  ansible.builtin.set_fact:
    ip_in_issue__issue_interfaces: []

- name: Set fact `exclude_interface_prefix`.
  ansible.builtin.set_fact:
    ip_in_issue__exclude_interface_prefix: '{{ ip_in_issue__default_exclude_interface_prefix }}'
  when: ip_in_issue__exclude_interface_prefix is not defined

- name: Debug `exclude_interface_prefix`.
  ansible.builtin.debug:
    msg: '{{ ip_in_issue__exclude_interface_prefix }}'
    verbosity: 1

- name: Block for defining excluded interfaces.
  when: ansible_interfaces is defined
  block:

    - name: Set fact `exclude_interface`.
      ansible.builtin.set_fact:
        ip_in_issue__exclude_interface: '{{ ip_in_issue__exclude_interface | default({}) | combine({item.0: true}) }}'
      with_nested:
        - '{{ ansible_interfaces }}'
        - '{{ ip_in_issue__exclude_interface_prefix }}'
      when: 'item.0.startswith(item.1) or item.0 == "lo"'

    - name: Debug `exclude_interface`.
      ansible.builtin.debug:
        msg: '{{ ip_in_issue__exclude_interface }}'
        verbosity: 2

    - name: Set fact `ip_in_issue__issue_interface`.
      ansible.builtin.set_fact:
        ip_in_issue__issue_interfaces: '{{ ip_in_issue__issue_interfaces | default([]) + [item] }}'
      with_items: '{{ ansible_interfaces }}'
      when: 'item not in ip_in_issue__exclude_interface'

- name: Debug issue interfaces.
  ansible.builtin.debug:
    msg: '{{ ip_in_issue__issue_interfaces }}'
    verbosity: 1

- name: Stat `/etc/ssh` directory.
  ansible.builtin.stat:
    path: /etc/ssh
  register: ip_in_issue__stat

- name: Record SSH host key fingerprints.
  when: ip_in_issue__stat.stat.exists
  block:
    - name: Find SSH host key fingerprint files.
      ansible.builtin.find:
        paths: /etc/ssh
        recurse: false
        use_regex: false
        patterns: 'ssh_host_*_key.pub'
      register: ip_in_issue__find_results

    - name: Get SSH host key fingerprints.
      ansible.builtin.shell: >
        /usr/bin/ssh-keygen -l -f {{ item.path | quote }}
      args:
        executable: /bin/bash
      with_items: '{{ ip_in_issue__find_results.files }}'
      register: ip_in_issue__keygen_results
      changed_when: false

    - name: Debug `ip_in_issue__keygen_results.results`.
      ansible.builtin.debug:
        msg: "{{ ip_in_issue__keygen_results.results }}"
        verbosity: 2

    - name: Set fact with dictionary of SSH key fingerprints.
      ansible.builtin.set_fact:
        ip_in_issue__ssh_fingerprints: "{{ ip_in_issue__ssh_fingerprints | default({}) | combine({item.0.path: item.1.stdout}) }}"
      with_together:
        - "{{ ip_in_issue__find_results.files }}"
        - "{{ ip_in_issue__keygen_results.results }}"

    - name: Debug SSH host fingerprints.
      ansible.builtin.debug:
        msg: '{{ ip_in_issue__ssh_fingerprints }}'
        verbosity: 2

- name: Set fact there are no SSH host fingerprints.
  ansible.builtin.set_fact:
    ip_in_issue__ssh_fingerprints: {}
  when: not ip_in_issue__stat.stat.exists

- name: Ensure /etc/issue file is customized.
  ansible.builtin.template:
    src: issue.j2
    dest: /etc/issue
    owner: root
    group: root
    mode: 0o644
  register: ip_in_issue__etc_issue
  changed_when:
    - ip_in_issue__etc_issue.changed
    - "'davedittrich.utils.kali_like' not in ansible_role_names"
  become: true

- name: Find `/etc/issue.d` templates on control host.
  ansible.builtin.find:
    paths: '{{ role_path }}/templates'
    recurse: false
    use_regex: false
    patterns: '*.issue.j2'
  delegate_to: localhost
  become: false
  register: ip_in_issue__templates_matched

- name: Set fact with template names.
  ansible.builtin.set_fact:
    ip_in_issue__issue_templates: '{{ ip_in_issue__issue_templates | default([]) + [item.path] }}'
  with_items: '{{ ip_in_issue__templates_matched.files }}'

- name: Debug template files.
  ansible.builtin.debug:
    msg: '{{ ip_in_issue__issue_templates }}'
    verbosity: 2

- name: Ensure `/etc/issue.d` directory exists.
  ansible.builtin.file:
    path: /etc/issue.d
    state: directory
    owner: root
    group: root
    mode: 0o755
  become: true

  # NetworkManager randomizes the MAC address on the `wlan0`
  # interface on reboot, which breaks idempotence checks. Rather
  # than turn it off, just disable `changed_when` for now.
  # See: https://forums.raspberrypi.com/viewtopic.php?t=237623

- name: Ensure `/etc/issue.d/*.issue` files exists.
  ansible.builtin.template:
    src: '{{ item }}'
    dest: '/etc/issue.d/{{ item.replace(".j2", "") | basename }}'
    owner: root
    group: root
    mode: 0o644
  with_items: '{{ ip_in_issue__issue_templates }}'
  changed_when: false
  become: true

# vim: ft=ansible:
