---

# Tasks file for davedittrich.utils.kali_like role.

- name: Set fact with users whose accounts need to be configured.
  ansible.builtin.set_fact:
    accounts: "{{ accounts | default(['root', ansible_user_id]) | unique }}"

- name: Ensure user home directories are mapped.
  include_tasks: '{{ collection_root }}/tasks/get_homedir.yml'
  loop: '{{ accounts }}'
  loop_control:
    loop_var: user

- name: Set fact with relative local path.
  ansible.builtin.set_fact:
    kali_like_script_templates_dir: '{{ role_path }}/templates/scripts/'

- name: Ensure base OS is prepared for Kali tool installs
  include_tasks:
    file: tasks/fix_base_os.yml

- name: Ensure required Kali packages are present.
  ansible.builtin.apt:
    name: "{{ kali_like_packages }}"
    state: present
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: Hush Kali developer login message.
  ansible.builtin.command: 'touch ~/.hushlogin'
  loop: '{{ accounts }}'
  loop_control:
    loop_var: user
  become: true
  become_user: '{{ user }}'
  changed_when: false

- name: Find script templates on control host.
  ansible.builtin.find:
    paths: '{{ kali_like_script_templates_dir }}'
    recurse: false
    use_regex: false
    patterns: '*.sh.j2'
  delegate_to: localhost
  become: false
  register: kali_like_script_templates_matched

- name: Set fact with relative template paths.
  ansible.builtin.set_fact:
    kali_like_script_templates: '{{ kali_like_script_templates | default([]) + [ item.path | basename ] }}'
  loop: '{{ kali_like_script_templates_matched.files }}'

- name: Debug `kali_like_script_templates`.
  ansible.builtin.debug:
    var: kali_like_script_templates
    verbosity: 1
  changed_when: false

- name: Ensure helper scripts are installed for users.
  include_tasks:
    file: install_helper_scripts.yml
  loop: '{{ accounts }}'
  loop_control:
    loop_var: user

# - name: Ensure Kali desktop-directories files exist
# TODO(dittrich): Complete this.

- name: Ensure applications-merged directory exists
  ansible.builtin.file:
    dest: '/etc/xdg/menus/applications-merged'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0o755
  become: true

- name: Ensure kali-applications.menu exists.
  ansible.builtin.copy:
    src: 'kali-applications.menu'
    dest: '/etc/xdg/menus/applications-merged/kali-applications.menu'
    owner: 'root'
    group: 'root'
    mode: 0o644
  become: true

- name: Ensure hostname reflects serial number.
  include_tasks: serial_hostname.yml
# - name: Ensure kali icons are present
# TODO(dittrich): Complete this.

- name: Ensure Guacamole installed for remote access.
  include_tasks: ../../../tasks/install_guacamole.yml

# vim: ft=ansible :
